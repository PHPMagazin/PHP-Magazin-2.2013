$a = array(10, 4, 8, 9, 2, 3, 7, 1, 6, 5);// 1) reguläre Funktion als callbackfunction randomSort($a, $b) {  return rand(-1, 1);}usort($a, 'randomSort');// 2) Instanz-Methode als callbackclass Sorter {  public function sort($a, $b) {    return $b - $a;  }}$sorter = new Sorter();usort($a, array($sorter, 'sort'));// 3) (statische) Klassen-Methode als callbackclass StaticSorter {  public static function sort($a, $b) {    return $a - $b;  }}usort($a, array('StaticSorter', 'sort'));// 3a) oderusort($a, 'StaticSorter::sort');// 4) anonyme Funktion prä-PHP-5.3-Ära$oldSchoolAnonymousFunction = create_function('$a, $b', 'return $a - $b;');usort($a, $oldSchoolAnonymousFunction);// 5) ausführbare Objekt-Instanzen (PHP >= 5.3)class InvokeSorter {  public function __invoke($a, $b) {    return $a - $b;  }}$sorter = new InvokeSorter();usort($a, $sorter);