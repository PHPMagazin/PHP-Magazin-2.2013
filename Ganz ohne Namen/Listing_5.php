class A {  private $private     = 'I am private';  protected $protected = 'I am protected';  public $public       = 'I am public';}class B extends A { }$accessor = function($var) {  var_dump($this->$var);};$a = new A();$aAccessor = $accessor->bindTo($a);$aAccessor('public');    // I am public$aAccessor('protected'); // Fatal error: Cannot access protected property A::$protected$aAccessor('private');   // Fatal error: Cannot access private property A::$private$aAccessor = $accessor->bindTo($a, 'A');$aAccessor('public');    // I am public$aAccessor('protected'); // I am protected$aAccessor('private');   // I am private$b = new B();$bAccessor = $accessor->bindTo($b);$bAccessor('public');    // I am public$bAccessor('protected'); // Fatal error: Cannot access protected property B::$protected$bAccessor('private');   // Notice: Undefined property: B::$private$bAccessor = $accessor->bindTo($b, 'B');$bAccessor('public');    // I am public$bAccessor('protected'); // I am protected$bAccessor('private');   // Notice: Undefined property: B::$private$bAccessor = $accessor->bindTo($b, 'A');$bAccessor('public');    // I am public$bAccessor('protected'); // I am protected$bAccessor('private');   // I am private